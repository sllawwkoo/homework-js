// –ó–∞–¥–∞—á–∞ 9.
// –ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ—Ç–∏–Ω–æ–∫ –æ–¥–Ω–æ–≤–∏–º—ñ—Ä–Ω–æ–≥–æ –º–∞—Å–∏–≤—É —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–æ—á–Ω–∏—Ö –∫–æ—Ä–∞–±–ª—ñ–≤.
// –ö–æ–º–ø‚Äô—é—Ç–µ—Ä –¥–æ–≤—ñ–ª—å–Ω–æ —Ä–æ–∑–º—ñ—â—É—î —Ü—ñ –æ–¥–∏–Ω–æ—á–Ω—ñ –∫–æ—Ä–∞–±–ª—ñ —É –º–∞—Å–∏–≤—ñ –ø–æ –æ–¥–∏–Ω —É –∫–ª—ñ—Ç–∏–Ω—Ü—ñ
// (—è–∫—â–æ —É –∫–ª—ñ—Ç–∏–Ω—Ü—ñ 0, —Ç–æ –∫–ª—ñ—Ç–∏–Ω–∫–∞ –ø—É—Å—Ç–∞, —è–∫—â–æ 1 ‚Äì —Ç–æ —Ü–µ –æ–∑–Ω–∞—á–∞—î, —â–æ —Ç–∞–º —î –∫–æ—Ä–∞–±–µ–ª—å.
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä –∫–ª—ñ—Ç–∏–Ω–∫–∏, –∫—É–¥–∏ —Å—Ç—Ä—ñ–ª—è—î.
// –ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è –¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –Ω–µ –±—É–¥—É—Ç—å –ø–æ—Ç–æ–ø–ª–µ–Ω—ñ —É—Å—ñ –∫–æ—Ä–∞–±–ª—ñ

if (confirm("–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?")) {
	function battleshipGame(size, shipCount) {
		const arr = new Array(size).fill(0);

		for (let i = 0; i < shipCount; ) {
			let randomIndex = Math.floor(Math.random() * size);
			if (arr[randomIndex] !== 1) {
				arr[randomIndex] = 1;
				i++;
			}
		}

		console.log("arr", arr);

		while (shipCount > 0) {
			let shot = parseInt(
				prompt(`–ó—Ä–æ–±—ñ—Ç—å –ø–æ—Å—Ç—Ä—ñ–ª, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤—ñ–¥ 0 –¥–æ ${size - 1}!`)
			);

			if (isNaN(shot) || shot < 0 || shot >= size) {
				alert("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
				continue;
			}

			if (arr[shot] === 1) {
				alert("–í–ª—É—á–∏–ª–∏! üö¢ –ü–æ—Ç–æ–ø–ª–µ–Ω–æ!");
				arr[shot] = 0;
				shipCount--;
			} else {
				alert("–ú–∏–º–æ! ‚ùå");
			}

			console.log("newArr", arr);
			console.log("shipCount", shipCount);
		}

		alert("–í—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ! üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏!");
	}

	const cellNum = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ—Ç–∏–Ω–æ–∫ –ø–æ–ª—è", "10"));
	const ships = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–æ—á–Ω–∏—Ö –∫–æ—Ä–∞–±–ª—ñ–≤", "5"));

	battleshipGame(cellNum, ships);
}
