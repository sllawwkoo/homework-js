"use strict";

// –ó–∞–¥–∞—á–∞ 3.
// –ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π.
// –í–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –Ω–∞ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–æ–º—É –ø–æ–ª—ñ —Ä–æ–∑–º—ñ—Ä–æ–º 6*6 —Ä–æ–∑—Ç–∞—à–æ–≤—É—î—Ç—å—Å—è 5 –∫–æ—Ä–∞–±–ª—ñ–≤.
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç—Ä—ñ–ª—è—î –≤–∫–∞–∑—É—é—á–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏.
// –ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è –ø–æ–∫–∏ –Ω–µ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ —É—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –∞–±–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–∞–∫—ñ–Ω—á–∞—Ç—å—Å—è —Å–Ω–∞—Ä—è–¥–∏.

if (confirm("–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?")) {
	function battleshipGame(size, shipCount) {
		const arr = Array.from({ length: size }, () => Array(size).fill(0));

		for (let i = 0; i < shipCount; ) {
			let randomRowIndex = Math.floor(Math.random() * size);
			let randomColIndex = Math.floor(Math.random() * size);

			if (arr[randomRowIndex][randomColIndex] !== 1) {
				arr[randomRowIndex][randomColIndex] = 1;
				i++;
			}
		}

		console.table("arr");
		console.table(arr);

		while (shipCount > 0) {
			let shotRow = parseInt(
				prompt(`–ó—Ä–æ–±—ñ—Ç—å –ø–æ—Å—Ç—Ä—ñ–ª, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ä—è–¥–∫—É –≤—ñ–¥ 1 –¥–æ ${size}!`)
			);

			let shotCol = parseInt(
				prompt(`–ó—Ä–æ–±—ñ—Ç—å –ø–æ—Å—Ç—Ä—ñ–ª, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Å—Ç–æ–≤–ø—á–∏–∫–∞ –≤—ñ–¥ 1 –¥–æ ${size}!`)
			);

			if (
				isNaN(shotRow) ||
				shotRow < 1 ||
				shotRow > size ||
				isNaN(shotCol) ||
				shotCol < 1 ||
				shotCol > size
			) {
				alert("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
				continue;
			}

			if (arr[shotRow - 1][shotCol - 1] === 1) {
				alert("–í–ª—É—á–∏–ª–∏! üö¢ –ü–æ—Ç–æ–ø–ª–µ–Ω–æ!");
				arr[shotRow - 1][shotCol - 1] = 0;
				shipCount--;
			} else {
				alert("–ú–∏–º–æ! ‚ùå");
			}

			console.log("newArr");
			console.table(arr);

			console.log("shipCount", shipCount);
		}

		alert("–í—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ! üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏!");
	}

	battleshipGame(6, 5);
}


